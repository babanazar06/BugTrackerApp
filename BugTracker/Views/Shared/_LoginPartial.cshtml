@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<style>
    ul.my-navbar-nav {
        margin-top: 5px;
        display: flex;
    }
    li.my-nav-item {
        list-style: none;
    }
</style>
<ul class="my-navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var userName = @UserManager.GetUserName(User);
    if(userName.Length > 15)
    {
        userName = userName.Substring(0, 14);
    }
    <li class="my-nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@userName</a>
    </li>
    <li class="my-nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="my-nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="my-nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
